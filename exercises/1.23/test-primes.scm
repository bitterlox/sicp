(load "/home/angel/sicp/exercises/1.23/smallest-divisor.scm")

(define (prime? n) (= n (smallest-divisor n)))

(define (timed-prime-test n)
  (newline)
  (display n)
  (with-timings
    (lambda () (prime? n))
    report-prime))

(define (start-prime-test n start-time)
  (cond
    ((prime? n)
     (report-prime (- (runtime) start-time))
     #t)
    (else #f)))

(define (report-prime elapsed-time gc realtime)
  (define (round-off z n)
  (let ((power (expt 10 n)))
    (/ (round (* power z)) power)))
  (display " | ")
  (display elapsed-time)
  (display " | ")
  (display gc)
  (display " | ")
  (display realtime))


(timed-prime-test 1009)
(timed-prime-test 1013)
(timed-prime-test 1019)
(timed-prime-test 10007)
(timed-prime-test 10009)
(timed-prime-test 10037)
(timed-prime-test 100003)
(timed-prime-test 100019)
(timed-prime-test 100043)
(timed-prime-test 1000003)
(timed-prime-test 1000033)
(timed-prime-test 1000037)
(timed-prime-test 100000007)
(timed-prime-test 100000037)
(timed-prime-test 100000039)
(timed-prime-test 1000000007)
(timed-prime-test 1000000009)
(timed-prime-test 1000000021)
(timed-prime-test 10000000019)
(timed-prime-test 10000000033)
(timed-prime-test 10000000061)
(timed-prime-test 100000000003)
(timed-prime-test 100000000019)
(timed-prime-test 100000000057)
(timed-prime-test 1000000000039)
(timed-prime-test 1000000000061)
(timed-prime-test 1000000000063)
